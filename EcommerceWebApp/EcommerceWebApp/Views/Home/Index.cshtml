@model List<EcommerceWebApp.Models.Item>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Home";
}

<section class="category-panel">
    <form method="get" action="@Url.Action("Index", "Home")">
        @{
            var selectedCategories = Context.Request.Query["categories"].ToList();
        }
        <div class="checkbox-row">
            <label>
                <input type="checkbox" name="categories" value="Beverages" @(selectedCategories.Contains("Beverages") ? "checked" : "")>
                Beverages
            </label>
            <label>
                <input type="checkbox" name="categories" value="Deli" @(selectedCategories.Contains("Deli") ? "checked" : "")>
                Deli
            </label>
            <label>
                <input type="checkbox" name="categories" value="Meat" @(selectedCategories.Contains("Meat") ? "checked" : "")>
                Meat
            </label>
        </div>
        <div class="checkbox-row">
            <label>
                <input type="checkbox" name="categories" value="Bread" @(selectedCategories.Contains("Bread") ? "checked" : "")>
                Bread
            </label>
            <label>
                <input type="checkbox" name="categories" value="Fruits" @(selectedCategories.Contains("Fruits") ? "checked" : "")>
                Fruits
            </label>
            <label>
                <input type="checkbox" name="categories" value="Pharmacy" @(selectedCategories.Contains("Pharmacy") ? "checked" : "")>
                Pharmacy
            </label>
        </div>
        <div class="checkbox-row">
            <label>
                <input type="checkbox" name="categories" value="Dairy" @(selectedCategories.Contains("Dairy") ? "checked" : "")>
                Dairy
            </label>
            <label>
                <input type="checkbox" name="categories" value="Health" @(selectedCategories.Contains("Health") ? "checked" : "")>
                Health
            </label>
            <label>
                <input type="checkbox" name="categories" value="Snack" @(selectedCategories.Contains("Snack") ? "checked" : "")>
                Snack
            </label>
        </div>

        <button type="submit" class="filter-button">Filter</button>
    </form>
</section>

<section class="product-container">
    <div class="product-grid">
        @foreach (var item in Model)
        {
            <article class="product-card">
                <div class="product-image">
                    <img src="@Url.Content("~/images/" + System.IO.Path.GetFileName(item.ImagePath))"
                         alt="@item.ItemName" width="100" height="100">

                </div>
                <div class="product-info">
                    <p class="item-name">@item.ItemName</p>
                    <p class="item-description">@item.Description</p>
                    <p class="price">
                        <span class="dollar-symbol">$</span>
                        <span class="amount">@item.ItemPrice</span>
                    </p>
                    <button class="add-button" onclick="addToCartAjax(@item.ItemID)">+</button>
                </div>
            </article>
        }
    </div>
</section>

@section Scripts {
    <script>
        function addToCartAjax(itemID) {
            fetch('@Url.Action("AddToCartAjax", "Home")?itemID=' + itemID, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert(data.message);
                        location.reload();
                    } else {
                        alert("Failed to add item to cart.");
                    }
                })
                .catch(error => console.error("Error:", error));
        }

        function increaseQuantity(itemID) {
            fetch('@Url.Action("IncreaseQuantity", "Home")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'itemID=' + itemID
            }).then(() => location.reload());
        }

        function decreaseQuantity(itemID, quantity) {
            fetch('@Url.Action("DecreaseQuantity", "Home")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'itemID=' + itemID + '&Quantity=' + quantity
            }).then(() => location.reload());
        }

        function removeFromCart(itemID) {
            fetch('@Url.Action("RemoveItem", "Home")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'itemID=' + itemID
            }).then(() => location.reload());
        }
    </script>
}
